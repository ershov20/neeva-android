# Following the steps outlined by: https://circleci.com/docs/2.0/language-android/

# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Declare the orbs you wish to use.
# Android orb docs are available here:  https://circleci.com/developer/orbs/orb/circleci/android
orbs:
  android: circleci/android@2.0.0

commands:
  bootstrap-checkout:
    steps:
      - checkout

      - run:
          name: Install git-lfs
          command: |
            sudo apt-get update
            sudo apt-get install git-lfs

      - run:
          name: Bootstrap Chromium projects
          command: ./bootstrap.sh release-99-x64

      - android/restore-build-cache
      - android/restore-gradle-cache

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - android/save-gradle-cache
      - android/save-build-cache

      - run:
            name: Creating directory for artifacts
            command: mkdir -p artifacts

jobs:
  run-ktlint:
    docker:
      - image: cimg/android:2021.12.2
    steps:
      - bootstrap-checkout

      - run:
          name: Running ktlint check.  If this fails, try running `./gradlew ktlintFormat` locally
          command: ./gradlew ktlintCheck

  run-unit-tests:
    docker:
      - image: cimg/android:2021.12.2
    steps:
      - bootstrap-checkout

      - android/run-tests:
          test-command: ./gradlew lint :app:testDebugUnitTest
      
      - run:
          name: Saving lint results
          command: cp app/build/reports/lint-results-debug.html artifacts

      - store_artifacts:
          path: artifacts

  run-instrumented-tests:
    machine:
      image: android:202102-01

    resource_class: large

    steps:
      - bootstrap-checkout

      - run:
          name: Accept all licenses
          command: yes | sdkmanager --licenses || exit 0

      - run:
          name: Update SDK manager
          command: yes | sdkmanager --update || exit 0

      - android/start-emulator-and-run-tests:
          additional-avd-args: -d "pixel_2"
          additional-emulator-args: -partition-size 1536
          post-emulator-launch-assemble-command: ''
          system-image: system-images;android-28;default;x86_64
          test-command: ./gradlew :app:connectedDebugAndroidTest

      - run:
          name: Saving instrumentation test results
          command: cp -R app/build/outputs/androidTest-results artifacts

      - store_artifacts:
          path: artifacts

workflows:
  test-workflow:
    jobs:
      - run-ktlint

      - run-unit-tests

      - run-instrumented-tests
